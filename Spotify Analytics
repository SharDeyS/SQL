# I enjoy using Spotify and decided to download some Spotify data from Kaggle. I created a table to insert the data and lastly performed analytics on the data using SQL. 

#Create table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Next, I inserted the Spotify Data .csv into the table and used SQL to check out the data.

#1. Determine what top 5 songs are the most popular.
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 5;

#2. Label songs high, medium and low based on tempo.
SELECT artist_name, track_name, popularity, danceability, energy, loudness, tempo,
CASE
    WHEN tempo >= 150 THEN 'high'
    WHEN tempo >= 100 THEN 'medium'
    ELSE 'low'
END AS TempoSpeed
FROM BIT_DB.Spotifydata; 

#3. Discover which song provides the highest energy.
SELECT track_name, MAX(energy) 
FROM BIT_DB.Spotifydata;

#4. Uncover which artists show up more than once on the list and how many times.
SELECT artist_name, COUNT(*) AS NumOfTimesListed
FROM BIT_DB.Spotifydata 
GROUP BY artist_name
HAVING NumOfTimesListed >= 2;
